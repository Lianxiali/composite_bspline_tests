// constants
PI = 3.14159265358979
Theta = PI/6
MU = 0.5
RHO = 1.0
U_MAX = 1.0
MFAC = 1.0

// grid spacing parameters
H = 1.0                                      // Height of the channel before it's rotated
Lx = 1.0
Ly = 2.0                                    // width of computational domain
L = Lx
D = 1
MAX_LEVELS = 1                                // maximum number of levels in locally refined grid
REF_RATIO  = 1                                // refinement ratio between levels
N = 128                                     // actual number of grid cells on coarsest grid level
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N
DX_FINEST = Lx/NFINEST                        //Mesh width on the finest level of the grid
DX = DX_FINEST
THETA = Theta

SPRING_CONSTANT = 0
DAMPING = 0
Yo = 0
Yi = 1
DP = 0


// solver parameters
// "IB_3"
// "IB_4"
// "DISCONTINUOUS_LINEAR"
// "COMPOSITE_BSPLINE_32"
// "COMPOSITE_BSPLINE_43"
// "COMPOSITE_BSPLINE_54"
// "COMPOSITE_BSPLINE_65"
DELTA_FUNCTION      = "IB_3"            // the type of smoothed delta function to use for Lagrangian-Eulerian interaction
SOLVER_TYPE         = "STAGGERED"              // the fluid solver to use (STAGGERED or COLLOCATED)
START_TIME          = 0.0e0                    // initial simulation time
END_TIME            = 2.0                      // final simulation time
GROW_DT             = 2.0e0                    // growth factor for timesteps
NUM_CYCLES          = 1                        // number of cycles of fixed-point iteration
CONVECTIVE_TS_TYPE  = "ADAMS_BASHFORTH"        // convective time stepping type
CONVECTIVE_OP_TYPE  = "PPM"                    // convective differencing discretization type
CONVECTIVE_FORM     = "ADVECTIVE"              // how to compute the convective terms
NORMALIZE_PRESSURE  = FALSE                    // whether to explicitly force the pressure to have mean zero
CFL_MAX             = 0.3                      // maximum CFL number
DT                  = 1*0.5*CFL_MAX*DX_FINEST/U_MAX        // maximum timestep size
ERROR_ON_DT_CHANGE  = TRUE                     // whether to emit an error message if the time step size changes
VORTICITY_TAGGING   = FALSE                    // whether to tag cells for refinement based on vorticity thresholds
TAG_BUFFER          = 1                        // size of tag buffer used by grid generation algorithm
REGRID_CFL_INTERVAL = 0.5                      // regrid whenever any material point could have moved 0.5 meshwidths since previous regrid
OUTPUT_U            = TRUE
OUTPUT_P            = TRUE
OUTPUT_F            = TRUE
OUTPUT_OMEGA        = TRUE
OUTPUT_DIV_U        = TRUE
ENABLE_LOGGING      = TRUE

//SPRING_CONSTANT = 1*0.0022/(cos(THETA) * DT^2)
//SPRING_DAMPING = 0
UNIFORM_TARGET_STIFFNESS = 0.075*(MFAC*DX_FINEST)*DX_FINEST/(DT*DT)
SPRING_DAMPING = 10


// Parabolic profile
U = "((cos(Theta)*(-1.0))/(2*(MU)))*(-X_0*sin(Theta) + X_1*cos(Theta))*(-X_0*sin(Theta) + X_1*cos(Theta) - H)"
V = "((sin(Theta)*(-1.0))/(2*(MU)))*(-X_0*sin(Theta) + X_1*cos(Theta))*(-X_0*sin(Theta) + X_1*cos(Theta) - H)"



VelocityInitialConditions {
   function_0 = "0.0"
   function_1 = "0.0"
}

VelocityBcCoefs_0 {
   H = 1.0
   MU = MU
   PI = 3.14159265358979
   Theta = PI/6
   Lx = 1.0

   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "(X_1 > 0 && X_1 < sin(Theta)*tan(Theta)*H + cos(Theta)*H) ? ((cos(Theta)*(-1.0))/(2*(MU)))*(-X_0*sin(Theta) + X_1*cos(Theta))*(-X_0*sin(Theta) + X_1*cos(Theta) - H) : 0.0"
   gcoef_function_1 = "(X_1 > tan(Theta)*Lx && X_1 < tan(Theta)*Lx + sin(Theta)*tan(Theta)*H + cos(Theta)*H) ? ((cos(Theta)*(-1.0))/(2*(MU)))*(-X_0*sin(Theta) + X_1*cos(Theta))*(-X_0*sin(Theta) + X_1*cos(Theta) - H): 0.0   "
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

VelocityBcCoefs_1 {
   Pgrad = -1.0
   PI = 3.14159265358979
   Theta = PI/6
   H = 1.0
   Lx = 1.0
   MU = MU
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "0.0"
   acoef_function_3 = "0.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "1.0"
   bcoef_function_3 = "1.0"

   gcoef_function_0 = "(X_1 > 0 && X_1 < sin(Theta)*tan(Theta)*H + cos(Theta)*H) ? ((sin(Theta)*(-1.0))/(2*(MU)))*(-X_0*sin(Theta) + X_1*cos(Theta))*(-X_0*sin(Theta) + X_1*cos(Theta) - H): 0.0"
   gcoef_function_1 = "(X_1 > tan(Theta)*Lx && X_1 < tan(Theta)*Lx + sin(Theta)*tan(Theta)*H + cos(Theta)*H) ? ((sin(Theta)*(-1.0))/(2*(MU)))*(-X_0*sin(Theta) + X_1*cos(Theta))*(-X_0*sin(Theta) + X_1*cos(Theta) - H): 0.0 "
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

PressureInitialConditions {
   function = "0.0"
}




IBHierarchyIntegrator {
   start_time          = START_TIME
   end_time            = END_TIME
   grow_dt             = GROW_DT
   num_cycles          = NUM_CYCLES
   regrid_cfl_interval = REGRID_CFL_INTERVAL
   dt_max              = DT
   error_on_dt_change  = ERROR_ON_DT_CHANGE
   enable_logging      = ENABLE_LOGGING
   IB_delta_fcn        = DELTA_FUNCTION
   viz_dump_dirname    = "viz_IB2d"   
}

IBMethod {
   interp_delta_fcn = DELTA_FUNCTION
   spread_delta_fcn = DELTA_FUNCTION //"DISCONTINUOUS_LINEAR"
   enable_logging = ENABLE_LOGGING
}

IBStandardInitializer {
   max_levels      = MAX_LEVELS
   structure_names = "Slanted_Channel128"
   Slanted_Channel128 {
      level_number = MAX_LEVELS - 1
      uniform_target_stiffness = UNIFORM_TARGET_STIFFNESS
   }
}

INSStaggeredHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   normalize_pressure            = NORMALIZE_PRESSURE
   cfl                           = CFL_MAX
   dt_max                        = DT
   using_vorticity_tagging       = VORTICITY_TAGGING
   vorticity_rel_thresh          = 0.01
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING
}

Main {

// log file parameters
   log_file_name               = "IB2d.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt","Silo"
   viz_dump_interval           = int(0.5/DT)
   viz_dump_dirname            = "viz_IB2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_IB2d"

// hierarchy data dump parameters
   data_dump_interval          = 0
   data_dump_dirname           = "hier_data_IB2d"

// timer dump parameters
   timer_dump_interval         = 0
}

CartesianGeometry {
   domain_boxes = [ (0,0),(N - 1,2.25*N - 1) ]
   x_lo = 0,-0.25
   x_up = Lx,2
   periodic_dimension = 0,0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO,REF_RATIO
      level_4 = REF_RATIO,REF_RATIO,REF_RATIO
      level_5 = REF_RATIO,REF_RATIO,REF_RATIO
      level_6 = REF_RATIO,REF_RATIO,REF_RATIO
      level_7 = REF_RATIO,REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   8,  8 // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.80e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.80e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total = TRUE
   print_threshold = 0.1

   timer_list = "IBAMR::*::*","IBTK::*::*","*::*::*"
}

